set shell=sh
set shortmess+=I
set nocompatible
set runtimepath+=$GOROOT/misc/vim
set nobackup
set noundofile
set t_Co=256 " (breaks CtrlP, Home/End keys without tmux)
colorscheme atom-dark-256
set ai smartindent
set hlsearch
set ignorecase
set smartcase
set showmatch
let c_space_errors=1
set cryptmethod=blowfish2

set exrc
set secure
set tags=./tags;

set vb
set nomodeline
set noexpandtab
set shiftwidth=8
set tabstop=8

set printdevice=192.168.0.50
set printoptions=paper:a4
set printexpr=system('/usr/local/bin/lpr'\ .\ (&printdevice\ ==\ ''\ ?\ ''\ :\ '\ -P'\ .\ &printdevice)\ .\ '\ '\ .\ v:fname_in)\ .\ delete(v:fname_in)\ +\ v:shell_error

autocmd BufRead *.[cChH],*.cpp,*.cxx,*.c++,*.cc :call FreeBSD_Style()

" Follow the FreeBSD style(9).
function! FreeBSD_Style()
	setlocal cindent
	setlocal cinoptions=(4200,u4200,+0.5s,*500,:0,t0,U4200
	setlocal indentexpr=IgnoreParenIndent()
	setlocal indentkeys=0{,0},0),:,0#,!^F,o,O,e
	setlocal textwidth=80
	highlight SpecialKey ctermbg=yellow guibg=yellow
	autocmd BufWinEnter * let w:matchnonascii=matchadd('SpecialKey', "[\x7f-\xff]", -1)
endfun

let mapleader = '\'
execute pathogen#infect()
Helptags
syntax on
filetype plugin indent on

highlight ExtraWhitespace ctermbg=red guibg=red
autocmd BufWinEnter * let w:matchextrawhitespace=matchadd('ExtraWhitespace', '/\s\+$\| \+\ze\t/')
highlight ColorColumn ctermbg=darkred
call matchadd('ColorColumn', '\%81v', 100)

" ******** PLUGINS ********

" Fugitive
nnoremap <silent> <leader>gs :Gstatus<CR>
nnoremap <silent> <leader>gd :Gdiff<CR>
nnoremap <silent> <leader>gc :Gcommit<CR>
nnoremap <silent> <leader>gb :Gblame<CR>
nnoremap <silent> <leader>gl :Glog<CR>
nnoremap <silent> <leader>gp :Git push<CR>
nnoremap <silent> <leader>gw :Gwrite<CR>
nnoremap <silent> <leader>gr :Gremove<CR>
autocmd FileType gitcommit nmap <buffer> U :Git checkout -- <C-r><C-g><CR>
autocmd BufReadPost fugitive://* set bufhidden=delete

" Airline
let g:airline_left_sep='>'
let g:airline_right_sep='<'
let g:airline#extensions#csv#enabled = 1
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#whitespace#mixed_indent_algo = 1
set laststatus=2

" CtrlP
let g:ctrlp_regexp = 1
let g:ctrlp_by_filename = 1
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$|\v[\/](tmp|bak|old|build.*|html)$',
  \ 'file': '\v\.(exe|so|dll|zip|o|swp|hi)$',
  \ }
" let g:ctrlp_user_command = 'ag %s -i --nocolor --nogroup --hidden
"       \ --ignore .git
"       \ --ignore .svn
"       \ --ignore ".*"
"       \ --ignore tmp
"       \ --ignore bak
"       \ --ignore old
"       \ --ignore "*.exe"
"       \ --ignore "*.dll"
"       \ --ignore "*.so"
"       \ --ignore "*.o"
"       \ --ignore "*.zip"
"       \ --ignore "*.swp"
"       \ --ignore "*.swo"
"       \ --ignore "lib*"
"       \ --ignore "build*"
"       \ --ignore "html"
"       \ -g ""'


" ******** CUSTOM FUNCTIONS ********

function! Browser ()
    let line = getline (".")
    let line = matchstr (line, "http[^ ]*")
    exec ":silent !firefox ".line
endfunction

" Ignore indents caused by parentheses in FreeBSD style.
function! IgnoreParenIndent()
    let indent = cindent(v:lnum)

    if indent > 4000
        if cindent(v:lnum - 1) > 4000
            return indent(v:lnum - 1)
        else
            return indent(v:lnum - 1) + 4
        endif
    else
        return (indent)
    endif
endfun

nnoremap <Leader>w :call Browser ()<CR>

autocmd FileType haskell	:call Haskell_Setup()

function! Haskell_Setup()
	setlocal tabstop=8
	setlocal expandtab
	setlocal softtabstop=8
	setlocal shiftwidth=8
	setlocal shiftround
endfunction
